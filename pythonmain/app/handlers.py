from aiogram import F,Router,types,Bot
from aiogram.filters import Command
from aiogram.types import LoginUrl
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import FSInputFile
from aiogram.enums import ParseMode



router = Router()


@router.message(Command("start"))
async def cmd_start(message: types.Message):
    builder = InlineKeyboardBuilder()
    builder.button(text="–ü–∞—É—ç—Ä–ª–∏—Ñ—Ç–∏–Ω–≥ üèãÔ∏è‚Äç‚ôÇÔ∏è",callback_data="powerlifting")
    builder.button(text="–ë–æ–¥–∏–±–∏–ª–¥–∏–Ω–≥ ü¶æ",callback_data="bodybuilding")
    builder.button(text="–ê–≤—Ç–æ—Ä—ã üìñ",callback_data="author")
    builder.button(text="–ñ–∏–º–æ–≤—ã–µ —Ä–∞—Å–∫–ª–∞–¥–∫–∏ üìï", callback_data="bench_press")
    builder.button(text="–ì–∞–π–¥—ã üìö",callback_data="gaids")
    builder.adjust(2,1)
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç! {message.from_user.first_name} –Ø —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –±–æ—Ç,\t–ë–æ—Ç –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –¥–ª—è —Å–µ–±—è –∏ –Ω–µ –ø–ª–∞—Ç–∏—Ç—å –Ω–∏ –∫–æ–ø–µ–π–∫–∏! üöÄ",reply_markup=builder.as_markup())
    

def powerlifting_menu():
    builder1 = InlineKeyboardBuilder()
    builder1.button(text="–í—ã—Å–æ–∫–∏–π", callback_data="highlevel")
    builder1.button(text="–õ—ë–≥–∫–∏–π",callback_data="lowlevel")
    builder1.button(text="–ù–∞–∑–∞–¥ ‚óÄÔ∏è", callback_data="back_to_main")
    builder1.adjust(2)
    return builder1.as_markup()

def Genderbodybuilding_menu():
    builder1 = InlineKeyboardBuilder()
    builder1.button(text="–ú—É–∂—á–∏–Ω–∞ ü§µ‚Äç‚ôÇÔ∏è", callback_data="manlevel")
    builder1.button(text="–ñ–µ–Ω—â–∏–Ω–∞ üë©‚Äçü¶∞",callback_data="womanlevel")
    builder1.button(text="–ù–∞–∑–∞–¥ ‚óÄÔ∏è", callback_data="back_to_main")
    builder1.adjust(2)
    return builder1.as_markup()

def bodybuilding_menu():
        builder1 = InlineKeyboardBuilder()
        builder1.button(text="–ë–æ–ª—å—à–µ 3-4 –ª–µ—Ç", callback_data="highlevelbody")
        builder1.button(text="–ú–µ–Ω—å—à–µ —Ç—Ä—ë—Ö –ª–µ—Ç",callback_data="lowlevelbody")
        builder1.button(text="–ù–∞–∑–∞–¥ ‚óÄÔ∏è", callback_data="back_to_main")
        builder1.adjust(2)
        return builder1.as_markup()

def womanbodybuilding_menu():
    builder1 = InlineKeyboardBuilder()
    builder1.button(text="–ë–æ–ª—å—à–µ 3-4 –ª–µ—Ç", callback_data="womanhighlevelbody")
    builder1.button(text="–ú–µ–Ω—å—à–µ —Ç—Ä—ë—Ö –ª–µ—Ç",callback_data="womanlowlevelbody")
    builder1.button(text="–ù–∞–∑–∞–¥ ‚óÄÔ∏è", callback_data="back_to_main")
    builder1.adjust(2)
    return builder1.as_markup()


def author_menu():
    buildermenu = InlineKeyboardBuilder()
    buildermenu.button(text="Telegram", url="https://t.me/ne1romediator")
    buildermenu.button(text="VK", url="https://vk.com/is_ma5")
    buildermenu.button(text="–ù–∞–∑–∞–¥ ‚óÄÔ∏è", callback_data="back_to_main")
    buildermenu.adjust(3)
    return buildermenu.as_markup()

def gaids():
    buildergaids = InlineKeyboardBuilder()
    buildergaids.button(text="üìï –ì–∞–π–¥ - –Ω–∞–±–æ—Ä –º—ã—à–µ—á–Ω–æ–π –º–∞—Å—Å—ã",url="https://telegra.ph/Rekompoziciya-sushka-12-09")
    buildergaids.button(text="üìó –ì–∞–π–¥ - –ø—Ä–æ—Ñ–∏—Ü–∏—Ç, –¥–µ—Ñ–∏—Ü–∏—Ç –∫–∞–ª–ª–æ—Ä–∏–π(–Ω–∞–±–æ—Ä, —Å—É—à–∫–∞)",url="https://telegra.ph/Hh-06-01-10")
    buildergaids.button(text="üìò –ì–∞–π–¥ - —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å–∏–ª–æ–≤—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π",url="https://telegra.ph/Progress---ehto-ne-skuchno-s-07-09")
    buildergaids.button(text="üìô –ì–∞–π–¥ - –∫–∞–∫ —É–±–µ—Ä–µ—á—å—Å—è –æ—Ç —Ç—Ä–∞–≤–º",url="https://telegra.ph/Testovyj-dokument-07-09")
    buildergaids.adjust(1)
    return buildergaids.as_markup()

@router.callback_query(F.data=="highlevel")
async def highlevelgeneral(callback:types.CallbackQuery):
    document = FSInputFile("–õ–∏–Ω–µ–π–Ω—ã–π —Ü–∏–∫–ª –¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö.xlsx")
    builder3 = InlineKeyboardBuilder()
    builder3.button(text="–ù–∞–∑–∞–¥ ‚óÄÔ∏è", callback_data="back_to_main")
    await callback.message.answer_document(document,caption="–£—Ä–æ–≤–µ–Ω—å –í—ã—Å–æ–∫–∏–π üî¥ - –ü–∞—É—ç—Ä–ª–∏—Ñ—Ç–∏–Ω–≥",reply_markup=builder3.as_markup())
    try:
        await callback.message.delete()
    except:
        pass

@router.callback_query(F.data=="lowlevel")
async def highlevelgeneral(callback:types.CallbackQuery):
    document = FSInputFile("–¶–∏–∫–ª –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è.xlsx")
    builder3 = InlineKeyboardBuilder()
    builder3.button(text="–ù–∞–∑–∞–¥ ‚óÄÔ∏è", callback_data="back_to_main")
    await callback.message.answer_document(document,caption="–£—Ä–æ–≤–µ–Ω—å –ù–∏–∑–∫–∏–π üü¢ - –ü–∞—É—ç—Ä–ª–∏—Ñ—Ç–∏–Ω–≥",reply_markup=builder3.as_markup())
    try:
        await callback.message.delete()
    except:
        pass

@router.callback_query(F.data=="manlevel")
async def manlevel(callback:types.CallbackQuery):
    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å—Ç–∞–∂–∞:",
        reply_markup=bodybuilding_menu()
    )
    await callback.answer()

@router.callback_query(F.data=="womanlevel")
async def manlevel(callback:types.CallbackQuery):
    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å—Ç–∞–∂–∞:",
        reply_markup=womanbodybuilding_menu()
    )
    await callback.answer()


@router.callback_query(F.data == "powerlifting")
async def send_random_value(callback: types.CallbackQuery):
    await callback.message.answer(
        
        "‚ö†Ô∏è –û–±—Ä–∞—â–∞–µ–º –≤–Ω–∏–º–∞–Ω–∏–µ - –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∏ —Å—Ä–µ–¥–Ω–µ–≥–æ —É—Ä–æ–≤–Ω–µ–π –ø–æ–¥—Ö–æ–¥—è—Ç –∏ –º—É–∂—á–∏–Ω–∞–º –∏ –∂–µ–Ω—â–∏–Ω–∞–º,\n" \
        " —Ç–∞–∫ –∂–µ –≤–Ω—É—Ç—Ä–∏ —Ñ–∞–π–ª–∞ –∫–∞–∂–¥–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –µ—Å—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è —Å —É—Ç–æ—á–Ω–µ–Ω–∏—è–º–∏ –∏–ª–∏ –æ—Ç–≤–µ—Ç–∞–º–∏ –Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ –≤–æ–∑–Ω–∏–∫—à–∏–µ –≤–æ–ø—Ä–æ—Å—ã.\n" \
        "\n–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å—Ç–∞–∂–∞:",
        reply_markup=powerlifting_menu()
    )
    try:
        await callback.message.delete()
    except:
        pass
    await callback.answer()

@router.callback_query(F.data == "bodybuilding")
async def send_random_value(callback: types.CallbackQuery):
    hidden_link = 'https://telegra.ph/Instrukciya-k-programmam-bb-11-01'
    answerquestion = ("<b>ü¶æ–ë–æ–¥–∏–±–∏–ª–¥–∏–Ω–≥</b> –ø–µ—Ä–µ–¥ –≤—ã–±–æ—Ä–æ–º –ø–æ–ª–∞, –æ–∑–Ω–∞–∫–æ–º—å—Å—è —Å–æ <a href='{}'>—Å—Ç–∞—Ç—å–µ–π</a>\t").format(hidden_link)
    await callback.message.answer(
        answerquestion,reply_markup=Genderbodybuilding_menu(),parse_mode="HTML")
    try:
        await callback.message.delete()
    except:
        pass
    await callback.answer()


@router.callback_query(F.data == "back_to_main")
async def backtomain(callback:types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.button(text="–ü–∞—É—ç—Ä–ª–∏—Ñ—Ç–∏–Ω–≥ üèãÔ∏è‚Äç‚ôÇÔ∏è", callback_data="powerlifting")
    builder.button(text="–ë–æ–¥–∏–±–∏–ª–¥–∏–Ω–≥ ü¶æ",callback_data="bodybuilding")
    builder.button(text="–ê–≤—Ç–æ—Ä—ã üìñ",callback_data="author")
    builder.button(text="–ñ–∏–º–æ–≤—ã–µ —Ä–∞—Å–∫–ª–∞–¥–∫–∏ üìï", callback_data="bench_press")
    builder.button(text="–ì–∞–π–¥—ã üìö",callback_data="gaids")
    builder.adjust(2,1)
    await callback.message.answer(
            f"–ü—Ä–∏–≤–µ—Ç! –Ø —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –±–æ—Ç –Ω–∞ aiogram 3.x!. –ë–æ—Ç –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –¥–ª—è —Å–µ–±—è –∏ –Ω–µ –ø–ª–∞—Ç–∏—Ç—å –Ω–∏ –∫–æ–ø–µ–π–∫–∏! üöÄ",
            reply_markup=builder.as_markup()
        )
    try:
        await callback.message.delete()
    except:
        pass
    
    await callback.answer()

@router.callback_query(F.data == "gaids")
async def gaids12(callback:types.CallbackQuery):
    gaidsimage = FSInputFile("zias-bench.gif")
    await callback.message.answer_photo(gaidsimage,caption="–í –¥–∞–Ω–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –≥–∞–π–¥—ã –ø–æ –ø–∏—Ç–∞–Ω–∏—é/—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º –∏ –¥—Ä—É–≥–∏–µ.",reply_markup=gaids())


@router.callback_query(F.data == "author")
async def author(callback:types.CallbackQuery):
    photoimage = FSInputFile("photoimageismail.jpg")
    await callback.message.answer_photo(photoimage,caption="<strong>–ò—Å–º–∞–∏–ª –ú–µ–Ω–¥–≥–∞–ª–∏–µ–≤</strong> - FullStack-Developer\n" \
    "\n‚úçÔ∏è<b>–ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –°–æ—Ü-—Å–µ—Ç–∏</b> –∞–≤—Ç–æ—Ä–∞ –¥–∞–Ω–Ω–æ–≥–æ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –≤—ã "
    "–º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è",parse_mode="HTML",reply_markup=author_menu())
    try:
        await callback.message.delete()
    except:
        pass
    await callback.answer()
        

@router.callback_query(F.data == "highlevelbody")
async def highlevelbody(callback:types.CallbackQuery):
    document = FSInputFile("–ú—É–∂ –≤—ã—Å–æ–∫–∏–π 3–¥–Ω–µ–≤–Ω—ã–π.xlsx")
    builder3 = InlineKeyboardBuilder()
    builder3.button(text="–ù–∞–∑–∞–¥ ‚óÄÔ∏è", callback_data="back_to_main")
    await callback.message.answer_document(document,caption="–£—Ä–æ–≤–µ–Ω—å –í—ã—Å–æ–∫–∏–π üî¥ - –ë–æ–¥–∏–±–∏–ª–¥–∏–Ω–≥",reply_markup=builder3.as_markup())
    try:
        await callback.message.delete()
    except:
        pass

@router.callback_query(F.data == "lowlevelbody")
async def highlevelbody(callback:types.CallbackQuery):
    document = FSInputFile("–ú—É–∂—Å–∫–æ–π –Ω–∞—á–∞–ª—å–Ω—ã–π 3—Ö –¥–Ω–µ–≤–Ω—ã–π.xlsx")
    builder3 = InlineKeyboardBuilder()
    builder3.button(text="–ù–∞–∑–∞–¥ ‚óÄÔ∏è", callback_data="back_to_main")
    await callback.message.answer_document(document,caption="–£—Ä–æ–≤–µ–Ω—å –ù–∏–∑–∫–∏–π üü¢ - –ë–æ–¥–∏–±–∏–ª–¥–∏–Ω–≥",reply_markup=builder3.as_markup())
    try:
        await callback.message.delete()
    except:
        pass

@router.callback_query(F.data == "womanhighlevelbody")
async def highlevelbody(callback:types.CallbackQuery):
    document = FSInputFile("–ñ–µ–Ω —Å—Ä–µ–¥–Ω–∏–π 3–¥–Ω–µ–≤–Ω—ã–π.xlsx")
    builder3 = InlineKeyboardBuilder()
    builder3.button(text="–ù–∞–∑–∞–¥ ‚óÄÔ∏è", callback_data="back_to_main")
    await callback.message.answer_document(document,caption="–£—Ä–æ–≤–µ–Ω—å –í—ã—Å–æ–∫–∏–π üî¥ - –ë–æ–¥–∏–±–∏–ª–¥–∏–Ω–≥",reply_markup=builder3.as_markup())
    try:
        await callback.message.delete()
    except:
        pass

@router.callback_query(F.data == "womanlowlevelbody")
async def highlevelbody(callback:types.CallbackQuery):
    document = FSInputFile("–ñ–µ–Ω –Ω–∞—á–∞–ª—å–Ω—ã–π 3–¥–Ω–µ–≤–Ω—ã–π.xlsx")
    builder3 = InlineKeyboardBuilder()
    builder3.button(text="–ù–∞–∑–∞–¥ ‚óÄÔ∏è", callback_data="back_to_main")
    await callback.message.answer_document(document,caption="–£—Ä–æ–≤–µ–Ω—å –ù–∏–∑–∫–∏–π üü¢ - –ë–æ–¥–∏–±–∏–ª–¥–∏–Ω–≥",reply_markup=builder3.as_markup())
    try:
        await callback.message.delete()
    except:
        pass




@router.callback_query(F.data == "bench_press")
async def bench(callback:types.CallbackQuery):
    docx = FSInputFile("bench_presses_article.docx")
    builder32 = InlineKeyboardBuilder()
    builder32.button(text="–ù–∞–∑–∞–¥",callback_data="back_to_main")
    await callback.message.answer_document(document=docx,reply_markup=builder32.as_markup())
    try:
        await callback.message.delete()
    except:
        pass


@router.message()
async def echo(message: types.Message):
    await message.answer("–¢—ã —á—ë –Ω–∞–ø–∏—Å–∞–ª,—á–µ–ø—É—Ö–∞?!")